{"version":3,"file":"static/js/639.21544c9a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","webpack://react-homework-template/./src/components/Input/Input.module.css?1f33","components/Input/Input.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"title\":\"Section_title__SLHvV\"};","import React from 'react';\nimport css from '../Section/Section.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <section className={css.section}>\n      <h1 className={css.title}>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form__btn\":\"ContactForm_form__btn__WXQ4e\"};","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Input_label__NXpCD\",\"input\":\"Input_input__E5rzA\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from '../Input/Input.module.css';\n\nexport const Input = ({\n  type,\n  name,\n  label,\n  value,\n  pattern,\n  title,\n  onChange,\n}) => {\n  return (\n    <label className={css.label}>\n      {label}\n      <input\n        className={css.input}\n        type={type}\n        name={name}\n        value={value}\n        pattern={pattern}\n        title={title}\n        required\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  pattern: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport css from '../ContactForm/ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Input } from 'components/Input/Input';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport { addContact } from '../../redux/contacts/operations';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n      case 'number':\n        setNumber(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const formSubmitHandler = data => {\n    const inContacts = contacts.find(contact => contact.name === data.name);\n    if (inContacts) {\n      alert(`${data.name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact(data));\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n\n    const newContact = { name, number, id: nanoid(10) };\n\n    formSubmitHandler(newContact);\n\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmitForm}>\n      <Input\n        type=\"text\"\n        label=\"name\"\n        name=\"name\"\n        value={name}\n        onChange={handleInputChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n      <Input\n        type=\"tel\"\n        label=\"number\"\n        name=\"number\"\n        value={number}\n        onChange={handleInputChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n      />\n      <button type=\"submit\" className={css.form__btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport { Input } from 'components/Input/Input';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterChange } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  const handleInputChange = event => {\n    dispatch(filterChange(event.target.value));\n  };\n  return (\n    <div>\n      <Input\n        type=\"text\"\n        label=\"find contacts by name\"\n        name=\"filter\"\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={handleInputChange}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\",\"item__text\":\"ContactList_item__text__DZlrG\"};","import React from 'react';\nimport css from '../ContactList/ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n\n  const deleteContactByClick = event => {\n    dispatch(deleteContact(event.target.id));\n  };\n\n  const filterContactListByQuery = () => {\n    if (filter && contacts) {\n      return contacts.filter(contact =>\n        contact.name.toUpperCase().includes(filter.toUpperCase())\n      );\n    }\n    return contacts;\n  };\n\n  const filteredList = filterContactListByQuery();\n\n  return (\n    <ul className=\"contactList\">\n      {filteredList.length > 0 &&\n        filteredList.map(({ id, name, number }) => (\n          <li key={id} className={css.item}>\n            <p className={css.item__text}>\n              {name}: {number}\n            </p>\n            <button id={id} onClick={deleteContactByClick}>\n              delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n","import { Section } from 'components/Section/Section';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ThreeCircles\n          display=\"block\"\n          height=\"30\"\n          width=\"30\"\n          color=\"#367af6\"\n          wrapperStyle={{}}\n          wrapperClass=\"spinnerWrapper\"\n          visible={true}\n          ariaLabel=\"three-circles-rotating\"\n        />\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n"],"names":["Section","title","children","className","css","Input","type","name","label","value","pattern","onChange","required","ContactForm","dispatch","useDispatch","contacts","useSelector","state","items","useState","setName","number","setNumber","handleInputChange","event","target","onSubmit","preventDefault","data","newContact","id","nanoid","find","contact","alert","addContact","Filter","filter","filterChange","ContactList","deleteContactByClick","deleteContact","filteredList","toUpperCase","includes","length","map","onClick","Contacts","useEffect","fetchContacts","display","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel"],"sourceRoot":""}